@page "/"
@inject HttpClient Http
@using MatchFlix_Frontend.Components.IconSection;
@using MatchFlix_Frontend.Components.MatchSection; 
@inject NavigationManager NavigationManager
@inject MessageService message;
<div class="carousel">
    <div class="containerTop">
    <div class="navbar">
        <a>About</a>
        <a>FAQ</a>
        <a>Home</a>
        <Button Ghost OnClick="ToLogin" id="loginButton">Login</Button>
    </div>
    <div class="bannerbase">
        <div class="texts">

            <h1 id="bannertitle">MatchFlix</h1>
            <Animate Animation="Animations.FadeRight" Easing="Easings.EaseInOutSine" Duration="TimeSpan.FromSeconds(1)" Delay="TimeSpan.FromSeconds(0.5)" IsManual="false">
                <h2 id="bannerslogan">Match, Swipe, Watch</h2>
            </Animate>
        </div>
        <div class="matchbtn">
            <Button Shape="round" id="matchBtn" OnClick="ToSwiping">Match!</Button>
        </div>
    </div>
    <Carousel Autoplay="TimeSpan.FromSeconds(5)">
        <CarouselSlick>
            <image src="/images/MOANA.JPG"></image>
        </CarouselSlick>
        <CarouselSlick>
            <image src="/images/OP.JPG"></image>
        </CarouselSlick>
        <CarouselSlick>
            <image src="/images/PB.JPG"></image>
        </CarouselSlick>
        <CarouselSlick>
            <image src="/images/QB.JPG"></image>
        </CarouselSlick>
    </Carousel>
    </div>
</div>

<div class="iconSection">
    <Button Size="large" Ghost>
        <image src="/images/relationshipclr.png"></image>
        <p class="iconText">Match with friends and family</p>
    </Button>
    <Button Size="large" Ghost OnClick="ToSwiping">
        <image src="/images/swipeclr.png"></image>
        <p class="iconText">Swipe your favourite shows</p>
    </Button>
    <Button Size="large" Ghost>
        <image src="/images/watchingclr2.png"></image>
        <p class="iconText">Compare and watch your matched shows!</p>
    </Button>
</div>
<MatchSection></MatchSection>
<BackTop></BackTop>


@code{

    private string joinUserName { get; set; }
    private string joinFriendCode { get; set; }
    private string hostUserName { get; set; }

    private async Task PostHostRoom()
    {
        ForwardModel result = await Http.GetFromJsonAsync<ForwardModel>("https://localhost:5031/anime/host/" + hostUserName);
        ToHosting(result.name, result.roomName);
    }

    void ToHosting(string _hostName, string _roomName)
    {
        NavigationManager.NavigateTo("room" + "/" + _hostName + "/" + _roomName);
    }

    void ToSwiping()
    {
        NavigationManager.NavigateTo("swiping");
    }
    
    void ToLogin()
    {
        NavigationManager.NavigateTo("login");
    }

    public async Task OnSearch()
    {
        await message.Loading($"Joining {joinUserName}", 2);
    }

    public class ForwardModel
    {
        public ForwardModel()
        {

        }
        public ForwardModel(string _name, string _roomName)
        {
            name = _name;
            roomName = _roomName;
        }
        public string name { get; set; }
        public string roomName { get; set; }
    }
}
